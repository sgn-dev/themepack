<?php
/**
 * 47GN THEMEPACK for Contao Open Source CMS
 *
 * Copyright (C) 2018 47GradNord - Agentur für Internetlösungen
 *
 * @license    commercial
 * @author     Holger Neuner
 */


namespace Sgn47gradnord\Themepack\Element;


use Contao\File;
use Contao\FilesModel;
use Contao\FrontendTemplate;
use Contao\StringUtil;

class Gallerybox extends AbstractElement
{
    /**
     * @var string
     */
    protected $strTemplate = 'ce_tp_gallerybox';

    public function generate()
    {
        $this->multiSRC = StringUtil::deserialize($this->multiSRC);

        // Return if there are no files
        if (empty($this->multiSRC) || !\is_array($this->multiSRC))
        {
            return '';
        }

        // Get the file entries from the database
        $this->objFiles = FilesModel::findMultipleByUuids($this->multiSRC);

        if ($this->objFiles === null)
        {
            return '';
        }

        return parent::generate(); // TODO: Change the autogenerated stub
    }

    /**
     * Compile the Element.
     */
    protected function compile()
    {
        $images = array();
        $auxDate = array();
        $objFiles = $this->objFiles;

        // Get all images
        while ($objFiles->next()) {

            // Continue if the files has been processed or does not exist
            if (isset($images[$objFiles->path]) || !file_exists(TL_ROOT . '/' . $objFiles->path)) {
                continue;
            }

            // Single files
            if ($objFiles->type == 'file')
            {
                $objFile = new File($objFiles->path);

                if (!$objFile->isImage)
                {
                    continue;
                }

                // Add the image
                $images[$objFiles->path] = array
                (
                    'id'         => $objFiles->id,
                    'uuid'       => $objFiles->uuid,
                    'name'       => $objFile->basename,
                    'singleSRC'  => $objFiles->path,
                    'filesModel' => $objFiles->current()
                );

                $auxDate[] = $objFile->mtime;
            }

            // Folders
            else
            {
                $objSubfiles = FilesModel::findByPid($objFiles->uuid, array('order' => 'name'));

                if ($objSubfiles === null)
                {
                    continue;
                }

                while ($objSubfiles->next())
                {
                    // Skip subfolders
                    if ($objSubfiles->type == 'folder')
                    {
                        continue;
                    }

                    $objFile = new File($objSubfiles->path);

                    if (!$objFile->isImage)
                    {
                        continue;
                    }

                    // Add the image
                    $images[$objSubfiles->path] = array
                    (
                        'id'         => $objSubfiles->id,
                        'uuid'       => $objSubfiles->uuid,
                        'name'       => $objFile->basename,
                        'singleSRC'  => $objSubfiles->path,
                        'filesModel' => $objSubfiles->current()
                    );

                    $auxDate[] = $objFile->mtime;
                }
            }
        }

        // Sort array
        switch ($this->sortBy)
        {
            default:
            case 'name_asc':
                uksort($images, 'basename_natcasecmp');
                break;

            case 'name_desc':
                uksort($images, 'basename_natcasercmp');
                break;

            case 'date_asc':
                array_multisort($images, SORT_NUMERIC, $auxDate, SORT_ASC);
                break;

            case 'date_desc':
                array_multisort($images, SORT_NUMERIC, $auxDate, SORT_DESC);
                break;

            // Deprecated since Contao 4.0, to be removed in Contao 5.0
            case 'meta':
                @trigger_error('The "meta" key in ContentGallery::compile() has been deprecated and will no longer work in Contao 5.0.', E_USER_DEPRECATED);
            // no break;

            case 'custom':
                if ($this->orderSRC != '')
                {
                    $tmp = StringUtil::deserialize($this->orderSRC);

                    if (!empty($tmp) && \is_array($tmp))
                    {
                        // Remove all values
                        $arrOrder = array_map(function () {}, array_flip($tmp));

                        // Move the matching elements to their position in $arrOrder
                        foreach ($images as $k=>$v)
                        {
                            if (array_key_exists($v['uuid'], $arrOrder))
                            {
                                $arrOrder[$v['uuid']] = $v;
                                unset($images[$k]);
                            }
                        }

                        // Append the left-over images at the end
                        if (!empty($images))
                        {
                            $arrOrder = array_merge($arrOrder, array_values($images));
                        }

                        // Remove empty (unreplaced) entries
                        $images = array_values(array_filter($arrOrder));
                        unset($arrOrder);
                    }
                }
                break;

            case 'random':
                shuffle($images);
                $this->Template->isRandomOrder = true;
                break;
        }

        $images = array_values($images);

        foreach($images as $key => $image)
        {
            $objCell = new \stdClass();

            // Add size and margin
            $images[$key]['size'] = $this->tp_size;
            $images[$key]['imagemargin'] = $this->imagemargin;
            $images[$key]['fullsize'] = $this->fullsize;

            $this->addImageToTemplate($objCell, $images[$key], null, $key.'_lightboxID', $images[$key]['filesModel']);

            $body[$key] = $objCell;
        }

        $this->Template->images = $body;
    }
}